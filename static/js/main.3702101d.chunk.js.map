{"version":3,"sources":["SG-Homepage.png","Listivity.gif","LittleGems.gif","Listivity.png","LittleGems.png","components/HomeJumbotron/HomeJumbotron.js","components/ImageCap/ImageCap.js","components/HomeWorkBar/HomeWorkBar.js","pages/home/Home.js","pages/about/About.js","pages/projects/Projects.js","pages/listivity/Listivity.js","pages/littlegems/LittleGems.js","components/Nav/Nav.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","HomeJumbotron","props","Jumbotron","fluid","Container","className","ImageCap","Card","title","CardImg","top","width","src","image","alt","CardBody","CardText","date","text","Button","outline","color","href","link","target","HomeWorkBar","class","Home","SgImage","About","Projects","Listivity","ListivityImage","LittleGems","LittleGemsImage","Nav","process","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","role","aria-haspopup","aria-labelledby","listivity","littlegems","App","path","crossorigin","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.3702101d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/SG-Homepage.96c5e55a.png\";","module.exports = __webpack_public_path__ + \"static/media/Listivity.697ace78.gif\";","module.exports = __webpack_public_path__ + \"static/media/LittleGems.9ed7eaa9.gif\";","module.exports = __webpack_public_path__ + \"static/media/Listivity.3f62b586.png\";","module.exports = __webpack_public_path__ + \"static/media/LittleGems.c322d0a9.png\";","import React from 'react';\nimport { Jumbotron, Container } from 'reactstrap';\n\nconst HomeJumbotron = (props) => {\n  return (\n    <div>\n      <Jumbotron fluid>\n        <Container fluid>\n          <h1 className=\"display-3\">Welcome to my portfolio.</h1>\n          <p className=\"lead\">I have spent more than 2 years studying and practicing front-end web development and just finished UCI's Full-Stack Web development program. Consider me for your web development role!</p>\n        </Container>\n      </Jumbotron>\n    </div>\n  );\n};\n\nexport default HomeJumbotron;","import React from 'react';\nimport { Card, CardBody, Button, CardTitle, CardText, CardImg } from 'reactstrap';\n\nconst ImageCap = (props) => {\n  return (\n    <div>\n      <Card className=\"sg-card\">\n        <h2>{props.title}</h2>\n        <CardImg top width=\"100%\" src={props.image} alt=\"Card image cap\" />\n        <CardBody>\n          <CardText className=\"sg-card-title\"><small className=\"text-muted\">{props.date}</small></CardText>\n          <CardText>{props.text}</CardText>\n          <Button className=\"sg-card-button\" outline color=\"primary\" href={props.link} target=\"_blank\">Check it out!</Button>\n        </CardBody>\n      </Card>\n    </div>\n  );\n};\n\nexport default ImageCap;","import React from 'react';\nimport { Jumbotron, Container } from 'reactstrap';\n\nconst HomeWorkBar = (props) => {\n  return (\n    <div class=\"recentWork\">\n      <p>Most Recent Work</p>\n    </div>\n  );\n};\n\nexport default HomeWorkBar;","import React from 'react'\nimport HomeJumbotron from '../../components/HomeJumbotron';\nimport ImageCap from '../../components/ImageCap';\nimport HomeWorkBar from '../../components/HomeWorkBar';\nimport SgImage from '../../SG-Homepage.png'\n\nconst Home = () => {\n  return (\n    <>\n      <HomeJumbotron></HomeJumbotron>\n      <HomeWorkBar></HomeWorkBar>\n      <ImageCap\n        title=\"Source Graphics\"\n        image={SgImage}\n        text=\"I have managed the Source Graphics website for the past 2 years. I've been able to exercise my front-end web development skills through building new pages and features using HTML, CSS, JavaScript.\"\n        link=\"https://sourcegraphics.com\"></ImageCap>\n    </>\n  )\n}\n\nexport default Home;\n","import React from 'react'\n\nconst About = () => {\n  return (\n    <div class=\"aboutContainer\">\n      <h1>About me</h1>\n      <p>My name is Jonah Householder. I am 22 years old. I went to college for 1 year for marketing but ended up dropping out. For the last one and a half years, I have been working in digital marketing doing PPC, email marketing, content marketing, and a little bit of web development. I have done the Udacity front-end Nanodegree so I have a little experience with the basics of front-end languages. I am excited for this class and working as a developer because I like building useable and nice looking websites.</p>\n    </div>\n  )\n}\n\nexport default About;\n","import React from 'react'\n\nconst Projects = () => {\n  return (\n    <h1>This is the Projects page.</h1>\n  )\n}\n\nexport default Projects;\n","import React from 'react';\nimport ImageCap from '../../components/ImageCap';\nimport ListivityImage from '../../Listivity.gif'\n\nconst Listivity = () => {\n  return (\n    <>\n      <ImageCap\n        title=\"Listivity\"\n        image={ListivityImage}\n        text=\"Listivity helps you keep track of all the things you said you wanted to do. Still canâ€™t decide what to eat, watch, or where to go? Let us decide for you!\"\n        link=\"https://radiant-woodland-54871.herokuapp.com/\"></ImageCap>\n    </>\n  )\n}\n\nexport default Listivity;\n","import React from 'react';\nimport ImageCap from '../../components/ImageCap';\nimport LittleGemsImage from '../../LittleGems.gif'\n\nconst LittleGems = () => {\n  return (\n    <>\n      <ImageCap\n        title=\"Listivity\"\n        image={LittleGemsImage}\n        text=\"LITTLE GEMS HELPS YOU FIND GREAT LOCAL FOOD YOU MAY HAVE OVERLOOKED. HOW IT WORKS: Using your location, Little Gems searchs for 4-star rated restaurants with a low amount of reviews.\"\n        link=\"https://erikapaige.github.io/LittleGems/\"></ImageCap>\n    </>\n  )\n}\n\nexport default LittleGems;\n","import React from 'react';\nimport listivity from \"../../Listivity.png\";\nimport littlegems from \"../../LittleGems.png\"\n\nconst Nav = () => {\n  return (\n    <>\n      <nav class=\"navbar navbar-expand-lg navbar-dark bg-dark\">\n        <a class=\"navbar-brand\" href={process.env.PUBLIC_URL + \"/\"}><strong>Jonah</strong> Householder</a>\n        <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n          <span class=\"navbar-toggler-icon\"></span>\n        </button>\n\n        <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n          <ul class=\"navbar-nav mr-auto\">\n            <li class=\"nav-item active\">\n              <a class=\"nav-link\" href={process.env.PUBLIC_URL + \"/\"}>Home<span class=\"sr-only\">(current)</span></a>\n            </li>\n            <li class=\"nav-item dropdown\">\n              <a class=\"nav-link dropdown-toggle\" href=\"#\" id=\"navbarDropdown\" role=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n                Projects\n                  </a>\n              <div class=\"dropdown-menu\" aria-labelledby=\"navbarDropdown\">\n                <a class=\"dropdown-item d-flex align-items-center\" href={process.env.PUBLIC_URL + \"/listivity\"}>\n                  <img class=\"mr-3\" src={listivity}></img>\n                  <div className=\"overflow-auto\">\n                    <p className=\"font-weight-bold overflow-auto\">Listivity</p>\n                    <p className=\"text-wrap\">Listivity helps you keep track of all the things you said you wanted to do.</p>\n                  </div>\n                </a>\n                <div class=\"dropdown-divider\"></div>\n                <a class=\"dropdown-item d-flex align-items-center\" href={process.env.PUBLIC_URL + \"/littlegems\"}>\n                  <img class=\"mr-3\" src={littlegems}></img>\n                  <div className=\"overflow-auto\">\n                    <p className=\"font-weight-bold overflow-auto\">Little Gems</p>\n                    <p className=\"text-wrap\">Little Gems helps you find great local food you may have overlooked.</p>\n                  </div>\n                </a>\n              </div>\n            </li>\n            <li class=\"nav-item\">\n              <a class=\"nav-link\" href={process.env.PUBLIC_URL + \"/about\"}>About</a>\n            </li>\n          </ul>\n        </div>\n      </nav>\n    </>\n  )\n}\n\nexport default Nav\n","import React from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport {\n  Switch,\n  Link,\n  Route,\n  BrowserRouter as Router\n} from 'react-router-dom';\nimport Home from './pages/home';\nimport About from './pages/about';\nimport Projects from './pages/projects';\nimport Listivity from './pages/listivity';\nimport LittleGems from './pages/littlegems';\nimport Nav from './components/Nav';\n\nfunction App() {\n  return (\n    <Router>\n      <Nav />\n\n      <Switch>\n\n        <Route path={process.env.PUBLIC_URL + \"/\"}>\n          <Home />\n        </Route>\n\n        <Route path={process.env.PUBLIC_URL + \"/about\"}>\n          <About />\n        </Route>\n\n        <Route path={process.env.PUBLIC_URL + \"/projects\"}>\n          <Projects />\n        </Route>\n\n        <Route path={process.env.PUBLIC_URL + \"/listivity\"}>\n          <Listivity />\n        </Route>\n\n        <Route path={process.env.PUBLIC_URL + \"/littlegems\"}>\n          <LittleGems />\n        </Route>\n\n      </Switch>\n\n      <script src=\"https://unpkg.com/react/umd/react.production.min.js\" crossorigin></script>\n\n      <script\n        src=\"https://unpkg.com/react-dom/umd/react-dom.production.min.js\"\n        crossorigin></script>\n\n      <script\n        src=\"https://unpkg.com/react-bootstrap@next/dist/react-bootstrap.min.js\"\n        crossorigin></script>\n\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}